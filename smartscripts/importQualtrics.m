%% Import data from text file.
% Script for importing data from the following text file:
%
%    C:\Users\dunch\Documents\MATLAB\besmart\BESMART_Brain_Engagement_Survey_for_Memory_Attention_Responding_and_Thinking (8).csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/01/31 11:43:46

%% Initialize variables.
[csvfile, path] = uigetfile('*.csv', 'Select Qualtrics file');
filename = fullfile(path, csvfile);
%filename = 'C:\Users\dunch\Documents\MATLAB\besmart\BESMART_Brain_Engagement_Survey_for_Memory_Attention_Responding_and_Thinking (8).csv';
delimiter = ',';
startRow = 3;

%% Read columns of data as strings:
% For more information, see the TEXTSCAN documentation.
formatSpec = '%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%q%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r','n','UTF-8');
% Skip the BOM (Byte Order Mark).
fseek(fileID, 3, 'bof');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'HeaderLines' ,startRow-1, 'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Convert the contents of columns containing numeric strings to numbers.
% Replace non-numeric strings with NaN.
raw = repmat({''},length(dataArray{1}),length(dataArray)-1);
for col=1:length(dataArray)-1
    raw(1:length(dataArray{col}),col) = dataArray{col};
end
numericData = NaN(size(dataArray{1},1),size(dataArray,2));

for col=[7,10,11,12,13,14,18,19,20,21,24,27,30,31,32,33,39,40,41,42,48,49,50,51,57,58,59,60,66,67,68,69,75,76,77,78,84,85,86,87,93,94,95,96,102,103,104,105,120,121,122,123,129,130,131,132,154,155,156,157,158,159,160,161,162,163,164,165,170,171,172,173,174,175,176,177,178,179,180,181,212,213,214,215,216,217,218,219,220,221,222,223]
    % Converts strings in the input cell array to numbers. Replaced non-numeric
    % strings with NaN.
    rawData = dataArray{col};
    for row=1:size(rawData, 1);
        % Create a regular expression to detect and remove non-numeric prefixes and
        % suffixes.
        regexstr = '(?<prefix>.*?)(?<numbers>([-]*(\d+[\,]*)+[\.]{0,1}\d*[eEdD]{0,1}[-+]*\d*[i]{0,1})|([-]*(\d+[\,]*)*[\.]{1,1}\d+[eEdD]{0,1}[-+]*\d*[i]{0,1}))(?<suffix>.*)';
        try
            result = regexp(rawData{row}, regexstr, 'names');
            numbers = result.numbers;
            
            % Detected commas in non-thousand locations.
            invalidThousandsSeparator = false;
            if any(numbers==',');
                thousandsRegExp = '^\d+?(\,\d{3})*\.{0,1}\d*$';
                if isempty(regexp(numbers, thousandsRegExp, 'once'));
                    numbers = NaN;
                    invalidThousandsSeparator = true;
                end
            end
            % Convert numeric strings to numbers.
            if ~invalidThousandsSeparator;
                numbers = textscan(strrep(numbers, ',', ''), '%f');
                numericData(row, col) = numbers{1};
                raw{row, col} = numbers{1};
            end
        catch me
        end
    end
end


%% Split data into numeric and cell columns.
rawNumericColumns = raw(:, [7,10,11,12,13,14,18,19,20,21,24,27,30,31,32,33,39,40,41,42,48,49,50,51,57,58,59,60,66,67,68,69,75,76,77,78,84,85,86,87,93,94,95,96,102,103,104,105,120,121,122,123,129,130,131,132,154,155,156,157,158,159,160,161,162,163,164,165,170,171,172,173,174,175,176,177,178,179,180,181,212,213,214,215,216,217,218,219,220,221,222,223]);
rawCellColumns = raw(:, [1,2,3,4,5,6,8,9,15,16,17,22,23,25,26,28,29,34,35,36,37,38,43,44,45,46,47,52,53,54,55,56,61,62,63,64,65,70,71,72,73,74,79,80,81,82,83,88,89,90,91,92,97,98,99,100,101,106,107,108,109,110,111,112,113,114,115,116,117,118,119,124,125,126,127,128,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,166,167,168,169,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,224,225,226]);


%% Replace non-numeric cells with NaN
R = cellfun(@(x) ~isnumeric(x) && ~islogical(x),rawNumericColumns); % Find non-numeric cells
rawNumericColumns(R) = {NaN}; % Replace non-numeric cells

%% Allocate imported array to column variable names
V1 = rawCellColumns(:, 1);
V2 = rawCellColumns(:, 2);
V3 = rawCellColumns(:, 3);
V4 = rawCellColumns(:, 4);
V5 = rawCellColumns(:, 5);
V6 = rawCellColumns(:, 6);
V7 = cell2mat(rawNumericColumns(:, 1));
V8 = rawCellColumns(:, 7);
V9 = rawCellColumns(:, 8);
V10 = cell2mat(rawNumericColumns(:, 2));
SC0_0 = cell2mat(rawNumericColumns(:, 3));
SC0_1 = cell2mat(rawNumericColumns(:, 4));
SC0_2 = cell2mat(rawNumericColumns(:, 5));
SubjectID = cell2mat(rawNumericColumns(:, 6));
RecipientFirstName = rawCellColumns(:, 9);
RecipientLastName = rawCellColumns(:, 10);
Source = rawCellColumns(:, 11);
Month = cell2mat(rawNumericColumns(:, 7));
Year = cell2mat(rawNumericColumns(:, 8));
ImageSet = cell2mat(rawNumericColumns(:, 9));
instructions = cell2mat(rawNumericColumns(:, 10));
meta_1_TEXT = rawCellColumns(:, 12);
meta_2_TEXT = rawCellColumns(:, 13);
meta_3_TEXT = cell2mat(rawNumericColumns(:, 11));
meta_4_TEXT = rawCellColumns(:, 14);
meta_5_TEXT = rawCellColumns(:, 15);
meta_6_TEXT = cell2mat(rawNumericColumns(:, 12));
meta_7_TEXT = rawCellColumns(:, 16);
pd_instructions = rawCellColumns(:, 17);
compass1 = cell2mat(rawNumericColumns(:, 13));
compass2 = cell2mat(rawNumericColumns(:, 14));
compass3 = cell2mat(rawNumericColumns(:, 15));
compass4 = cell2mat(rawNumericColumns(:, 16));
Q873_1 = rawCellColumns(:, 18);
Q873_2 = rawCellColumns(:, 19);
Q873_3 = rawCellColumns(:, 20);
Q873_4 = rawCellColumns(:, 21);
pd_timing = rawCellColumns(:, 22);
coin1 = cell2mat(rawNumericColumns(:, 17));
coin2 = cell2mat(rawNumericColumns(:, 18));
coin3 = cell2mat(rawNumericColumns(:, 19));
coin4 = cell2mat(rawNumericColumns(:, 20));
pd_timing_1 = rawCellColumns(:, 23);
pd_timing_2 = rawCellColumns(:, 24);
pd_timing_3 = rawCellColumns(:, 25);
pd_timing_4 = rawCellColumns(:, 26);
pd_instructions1 = rawCellColumns(:, 27);
egg1 = cell2mat(rawNumericColumns(:, 21));
egg2 = cell2mat(rawNumericColumns(:, 22));
egg3 = cell2mat(rawNumericColumns(:, 23));
egg4 = cell2mat(rawNumericColumns(:, 24));
pd_timing_5 = rawCellColumns(:, 28);
pd_timing_6 = rawCellColumns(:, 29);
pd_timing_7 = rawCellColumns(:, 30);
pd_timing_8 = rawCellColumns(:, 31);
pd_instructions2 = rawCellColumns(:, 32);
grater1 = cell2mat(rawNumericColumns(:, 25));
grater2 = cell2mat(rawNumericColumns(:, 26));
grater3 = cell2mat(rawNumericColumns(:, 27));
grater4 = cell2mat(rawNumericColumns(:, 28));
pd_timing_9 = rawCellColumns(:, 33);
pd_timing_10 = rawCellColumns(:, 34);
pd_timing_11 = rawCellColumns(:, 35);
pd_timing_12 = rawCellColumns(:, 36);
pd_instructions3 = rawCellColumns(:, 37);
feather1 = cell2mat(rawNumericColumns(:, 29));
feather2 = cell2mat(rawNumericColumns(:, 30));
feather3 = cell2mat(rawNumericColumns(:, 31));
feather4 = cell2mat(rawNumericColumns(:, 32));
pd_timing_13 = rawCellColumns(:, 38);
pd_timing_14 = rawCellColumns(:, 39);
pd_timing_15 = rawCellColumns(:, 40);
pd_timing_16 = rawCellColumns(:, 41);
pd_instructions4 = rawCellColumns(:, 42);
camera1 = cell2mat(rawNumericColumns(:, 33));
camera2 = cell2mat(rawNumericColumns(:, 34));
camera3 = cell2mat(rawNumericColumns(:, 35));
camera4 = cell2mat(rawNumericColumns(:, 36));
pd_timing_17 = rawCellColumns(:, 43);
pd_timing_18 = rawCellColumns(:, 44);
pd_timing_19 = rawCellColumns(:, 45);
pd_timing_20 = rawCellColumns(:, 46);
pd_instructions5 = rawCellColumns(:, 47);
dolls1 = cell2mat(rawNumericColumns(:, 37));
dolls2 = cell2mat(rawNumericColumns(:, 38));
dolls3 = cell2mat(rawNumericColumns(:, 39));
dolls4 = cell2mat(rawNumericColumns(:, 40));
pd_timing_21 = rawCellColumns(:, 48);
pd_timing_22 = rawCellColumns(:, 49);
pd_timing_23 = rawCellColumns(:, 50);
pd_timing_24 = rawCellColumns(:, 51);
pd_instructions6 = rawCellColumns(:, 52);
bear1 = cell2mat(rawNumericColumns(:, 41));
bear2 = cell2mat(rawNumericColumns(:, 42));
bear3 = cell2mat(rawNumericColumns(:, 43));
bear4 = cell2mat(rawNumericColumns(:, 44));
pd_timing_25 = rawCellColumns(:, 53);
pd_timing_26 = rawCellColumns(:, 54);
pd_timing_27 = rawCellColumns(:, 55);
pd_timing_28 = rawCellColumns(:, 56);
pd_instructions7 = rawCellColumns(:, 57);
box1 = cell2mat(rawNumericColumns(:, 45));
box2 = cell2mat(rawNumericColumns(:, 46));
box3 = cell2mat(rawNumericColumns(:, 47));
box4 = cell2mat(rawNumericColumns(:, 48));
pd_timing_29 = rawCellColumns(:, 58);
pd_timing_30 = rawCellColumns(:, 59);
pd_timing_31 = rawCellColumns(:, 60);
pd_timing_32 = rawCellColumns(:, 61);
pd_Instructions = rawCellColumns(:, 62);
typewriter1 = rawCellColumns(:, 63);
typewriter2 = rawCellColumns(:, 64);
typewriter3 = rawCellColumns(:, 65);
typewriter4 = rawCellColumns(:, 66);
pd_timing_33 = rawCellColumns(:, 67);
pd_timing_34 = rawCellColumns(:, 68);
pd_timing_35 = rawCellColumns(:, 69);
pd_timing_36 = rawCellColumns(:, 70);
pd_instructions8 = rawCellColumns(:, 71);
skate1 = cell2mat(rawNumericColumns(:, 49));
skate2 = cell2mat(rawNumericColumns(:, 50));
skate3 = cell2mat(rawNumericColumns(:, 51));
skate4 = cell2mat(rawNumericColumns(:, 52));
pd_timing_37 = rawCellColumns(:, 72);
pd_timing_38 = rawCellColumns(:, 73);
pd_timing_39 = rawCellColumns(:, 74);
pd_timing_40 = rawCellColumns(:, 75);
pd_instructions9 = rawCellColumns(:, 76);
basket1 = cell2mat(rawNumericColumns(:, 53));
basket2 = cell2mat(rawNumericColumns(:, 54));
basket3 = cell2mat(rawNumericColumns(:, 55));
basket4 = cell2mat(rawNumericColumns(:, 56));
pd_timing_41 = rawCellColumns(:, 77);
pd_timing_42 = rawCellColumns(:, 78);
pd_timing_43 = rawCellColumns(:, 79);
pd_timing_44 = rawCellColumns(:, 80);
motor_timing_1 = rawCellColumns(:, 81);
motor_timing_2 = rawCellColumns(:, 82);
motor_timing_3 = rawCellColumns(:, 83);
motor_timing_4 = rawCellColumns(:, 84);
motor_instructions = rawCellColumns(:, 85);
motor1 = rawCellColumns(:, 86);
motor2 = rawCellColumns(:, 87);
motor3 = rawCellColumns(:, 88);
motor4 = rawCellColumns(:, 89);
motor5 = rawCellColumns(:, 90);
trails_timing_1 = rawCellColumns(:, 91);
trails_timing_2 = rawCellColumns(:, 92);
trails_timing_3 = rawCellColumns(:, 93);
trails_timing_4 = rawCellColumns(:, 94);
trails_instructions = rawCellColumns(:, 95);
trails = rawCellColumns(:, 96);
ws_inst = rawCellColumns(:, 97);
ws_img_1 = cell2mat(rawNumericColumns(:, 57));
ws_img_2 = cell2mat(rawNumericColumns(:, 58));
ws_img_3 = cell2mat(rawNumericColumns(:, 59));
ws_img_4 = cell2mat(rawNumericColumns(:, 60));
ws_img_5 = cell2mat(rawNumericColumns(:, 61));
ws_img_6 = cell2mat(rawNumericColumns(:, 62));
ws_img_7 = cell2mat(rawNumericColumns(:, 63));
ws_img_8 = cell2mat(rawNumericColumns(:, 64));
ws_img_9 = cell2mat(rawNumericColumns(:, 65));
ws_img_10 = cell2mat(rawNumericColumns(:, 66));
ws_img_11 = cell2mat(rawNumericColumns(:, 67));
ws_img_12 = cell2mat(rawNumericColumns(:, 68));
ws_img_timing_1 = rawCellColumns(:, 98);
ws_img_timing_2 = rawCellColumns(:, 99);
ws_img_timing_3 = rawCellColumns(:, 100);
ws_img_timing_4 = rawCellColumns(:, 101);
ws_ans_1 = cell2mat(rawNumericColumns(:, 69));
ws_ans_2 = cell2mat(rawNumericColumns(:, 70));
ws_ans_3 = cell2mat(rawNumericColumns(:, 71));
ws_ans_4 = cell2mat(rawNumericColumns(:, 72));
ws_ans_5 = cell2mat(rawNumericColumns(:, 73));
ws_ans_6 = cell2mat(rawNumericColumns(:, 74));
ws_ans_7 = cell2mat(rawNumericColumns(:, 75));
ws_ans_8 = cell2mat(rawNumericColumns(:, 76));
ws_ans_9 = cell2mat(rawNumericColumns(:, 77));
ws_ans_10 = cell2mat(rawNumericColumns(:, 78));
ws_ans_11 = cell2mat(rawNumericColumns(:, 79));
ws_ans_12 = cell2mat(rawNumericColumns(:, 80));
ws_ans_timing_1 = rawCellColumns(:, 102);
ws_ans_timing_2 = rawCellColumns(:, 103);
ws_ans_timing_3 = rawCellColumns(:, 104);
ws_ans_timing_4 = rawCellColumns(:, 105);
ws_1_solution = rawCellColumns(:, 106);
ws_2_solution = rawCellColumns(:, 107);
ws_3_solution = rawCellColumns(:, 108);
ws_4_solution = rawCellColumns(:, 109);
ws_5_solution = rawCellColumns(:, 110);
ws_6_solution = rawCellColumns(:, 111);
ws_7_solution = rawCellColumns(:, 112);
ws_8_solution = rawCellColumns(:, 113);
ws_9_solution = rawCellColumns(:, 114);
ws_10_solution = rawCellColumns(:, 115);
ws_11_solution = rawCellColumns(:, 116);
ws_12_solutoin = rawCellColumns(:, 117);
motor_timing_2_1 = rawCellColumns(:, 118);
motor_timing_2_2 = rawCellColumns(:, 119);
motor_timing_2_3 = rawCellColumns(:, 120);
motor_timing_2_4 = rawCellColumns(:, 121);
motor_instructions1 = rawCellColumns(:, 122);
motor6 = rawCellColumns(:, 123);
motor7 = rawCellColumns(:, 124);
motor8 = rawCellColumns(:, 125);
motor9 = rawCellColumns(:, 126);
motor10 = rawCellColumns(:, 127);
pr_timing_1 = rawCellColumns(:, 128);
pr_timing_2 = rawCellColumns(:, 129);
pr_timing_3 = rawCellColumns(:, 130);
pr_timing_4 = rawCellColumns(:, 131);
box_recall = cell2mat(rawNumericColumns(:, 81));
typewriter_recall = cell2mat(rawNumericColumns(:, 82));
skate_recall = cell2mat(rawNumericColumns(:, 83));
basket_recall = cell2mat(rawNumericColumns(:, 84));
bear_recall = cell2mat(rawNumericColumns(:, 85));
dolls_recall = cell2mat(rawNumericColumns(:, 86));
camera_recall = cell2mat(rawNumericColumns(:, 87));
feather_recall = cell2mat(rawNumericColumns(:, 88));
grater_recall = cell2mat(rawNumericColumns(:, 89));
egg_recall = cell2mat(rawNumericColumns(:, 90));
coin_recall = cell2mat(rawNumericColumns(:, 91));
compass_recall = cell2mat(rawNumericColumns(:, 92));
LocationLatitude = rawCellColumns(:, 132);
LocationLongitude = rawCellColumns(:, 133);
LocationAccuracy = rawCellColumns(:, 134);


%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans raw col numericData rawData row regexstr result numbers invalidThousandsSeparator thousandsRegExp me rawNumericColumns rawCellColumns R;

%% Rename a few columns from Qualtrics defaults
ResponseID = V1;
StartDate = V8;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Word Search 

